package net.doge.sdk.entity.music.info.lyric;

import net.doge.util.common.CryptoUtil;

import java.nio.charset.StandardCharsets;
import java.util.Arrays;

/**
 * @Author Doge
 * @Description QRC 歌词解析工具类
 * @Date 2020/12/15
 */
public class QrcParser {
    private static final byte[] QQKey = "!@#)(*$%123ZXC!@!@#)(NHL".getBytes(StandardCharsets.UTF_8);

    public static String parse(String hexText) {
//        String src = restoreQrc(hexText);
        String result = decode(hexText);
        return result;
    }

    public static void main(String[] args) {
        System.out.println(QrcParser.parse
    }

//    private String decryptQrc(String content) {
//        if (StringUtil.isEmpty(content)) return null;
//
//    }

    private static String decode(String hexText) {
        byte[] bytes = CryptoUtil.hexToBytes(hexText);
        int bytesLen = bytes.length;
        byte[] data = new byte[bytesLen];

        QrcDecoder qrcDecoder = new QrcDecoder();
        byte[][][] schedule = new byte[3][16][6];
        qrcDecoder.threeDesKeySetup(QQKey, schedule, QrcDecoder.DECRYPT);
        for (int i = 0; i < bytesLen; i += 8) {
            byte[] temp = new byte[8];
            byte[] in = Arrays.copyOfRange(bytes, i, bytes.length);
            qrcDecoder.threeDesCrypt(in, temp, schedule);
            for (int j = 0; j < 8; j++) data[i + j] = temp[j];
        }
        String result = new String(CryptoUtil.decompress(data), StandardCharsets.UTF_8);
        return result;
    }

    private static String restoreQrc(String hexText) {
        int hexLen = hexText.length();
        if (hexLen % 2 != 0) return "";

        String sig = "[offset:0]\n";
        int sigLen = sig.length();
        byte[] arrBuf = new byte[hexLen / 2 + sigLen];
        for (int i = 0; i < sigLen; i++) arrBuf[i] = (byte) sig.charAt(i);

        int offset = sigLen;
        for (int i = 0; i < hexLen; i += 2)
            arrBuf[offset + i / 2] = (byte) Integer.parseInt(hexText.substring(i, i + 2), 16);

        return new String(arrBuf, StandardCharsets.UTF_8);
    }
}
